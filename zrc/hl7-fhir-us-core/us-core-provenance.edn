{ns hl7-fhir-us-core.us-core-provenance,
 import
 #{hl7-fhir-r4-core.BackboneElement
   zen.fhir
   hl7-fhir-us-core.us-core-practitioner
   hl7-fhir-us-core.us-core-organization
   hl7-fhir-r4-core.instant
   hl7-fhir-us-core.us-core-patient
   hl7-fhir-r4-core.Reference
   hl7-fhir-r4-core.Element
   hl7-fhir-r4-core.Provenance
   hl7-fhir-r4-core.CodeableConcept
   hl7-fhir-us-core.value-set.us-core-provenance-participant-type},
 schema
 {:zen.fhir/version "0.5.21-8",
  :confirms #{zen.fhir/Resource hl7-fhir-r4-core.Provenance/schema},
  :zen/tags #{zen.fhir/profile-schema zen/schema},
  :zen.fhir/profileUri
  "http://hl7.org/fhir/us/core/StructureDefinition/us-core-provenance",
  :require #{:recorded :agent :target},
  :type zen/map,
  :zen/desc
  "Draft set of requirements to satisfy Basic Provenance Requirements.",
  :keys
  {:target
   {:type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
     :fhir/flags #{:MS},
     :zen.fhir/reference {:refers #{}},
     :zen/desc "The Resource this Provenance record supports"},
    :minItems 1},
   :recorded
   {:confirms #{hl7-fhir-r4-core.instant/schema},
    :fhir/flags #{:MS},
    :zen/desc "Timestamp when the activity was recorded / updated"},
   :_recorded {:confirms #{hl7-fhir-r4-core.Element/schema}},
   :agent
   {:slicing
    {:slices
     {"ProvenanceAuthor"
      {:schema
       {:type zen/vector,
        :every
        {:type zen/map,
         :keys
         {:type
          {:match
           {:coding
            #{{:system
               "http://terminology.hl7.org/CodeSystem/provenance-participant-type",
               :code "author"}}},
           :confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
           :fhir/flags #{:MS}}},
         :require #{:type}}},
       :filter
       {:engine :match,
        :match
        {:type
         {:coding
          #{{:system
             "http://terminology.hl7.org/CodeSystem/provenance-participant-type",
             :code "author"}}}}}},
      "ProvenanceTransmitter"
      {:schema
       {:type zen/vector,
        :maxItems 1,
        :every
        {:type zen/map,
         :keys
         {:type
          {:match
           {:coding
            #{{:system
               "http://hl7.org/fhir/us/core/CodeSystem/us-core-provenance-participant-type",
               :code "transmitter"}}},
           :confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
           :fhir/flags #{:MS}}},
         :require #{:type}}},
       :filter
       {:engine :match,
        :match
        {:type
         {:coding
          #{{:system
             "http://hl7.org/fhir/us/core/CodeSystem/us-core-provenance-participant-type",
             :code "transmitter"}}}}}}}},
    :type zen/vector,
    :every
    {:confirms #{hl7-fhir-r4-core.BackboneElement/schema},
     :type zen/map,
     :keys
     {:type
      {:confirms #{hl7-fhir-r4-core.CodeableConcept/schema},
       :fhir/flags #{:MS},
       :zen.fhir/value-set
       {:symbol
        hl7-fhir-us-core.value-set.us-core-provenance-participant-type/value-set,
        :strength :extensible}},
      :who
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:MS},
       :zen.fhir/reference
       {:refers
        #{hl7-fhir-us-core.us-core-organization/schema
          hl7-fhir-us-core.us-core-patient/schema
          hl7-fhir-us-core.us-core-practitioner/schema}}},
      :onBehalfOf
      {:confirms
       #{hl7-fhir-r4-core.Reference/schema zen.fhir/Reference},
       :fhir/flags #{:MS},
       :zen.fhir/reference
       {:refers #{hl7-fhir-us-core.us-core-organization/schema}}}},
     :require #{:who},
     :fhir/flags #{:MS}},
    :minItems 1}},
  :zen.fhir/type "Provenance"}}